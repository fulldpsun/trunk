//------------------------------------------------------------------------------
// <auto-generated>
//     ?????????
//     ?????:4.0.30319.18052
//
//     ???????????????????????
//     ????????????????
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Windows;
using System.Windows.Media;
using System.Windows.Media.Effects;
using System.Windows.Media.Media3D;


namespace YOCUKITop
{
	
	public class LogoEffect : ShaderEffect {
		public static readonly DependencyProperty InputProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("Input", typeof(LogoEffect), 0);
		public static readonly DependencyProperty RedThresholdProperty = DependencyProperty.Register("RedThreshold", typeof(double), typeof(LogoEffect), new UIPropertyMetadata(((double)(0D)), PixelShaderConstantCallback(0)));
		public static readonly DependencyProperty SunAngleProperty = DependencyProperty.Register("SunAngle", typeof(double), typeof(LogoEffect), new UIPropertyMetadata(((double)(0D)), PixelShaderConstantCallback(1)));
		public LogoEffect() {
			PixelShader pixelShader = new PixelShader();
            pixelShader.UriSource = new Uri("/YOCUKITop;component/LogoEffect.ps", UriKind.Relative);
			this.PixelShader = pixelShader;

			this.UpdateShaderValue(InputProperty);
			this.UpdateShaderValue(RedThresholdProperty);
			this.UpdateShaderValue(SunAngleProperty);
		}
		public Brush Input {
			get {
				return ((Brush)(this.GetValue(InputProperty)));
			}
			set {
				this.SetValue(InputProperty, value);
			}
		}
		public double RedThreshold {
			get {
				return ((double)(this.GetValue(RedThresholdProperty)));
			}
			set {
				this.SetValue(RedThresholdProperty, value);
			}
		}
		public double SunAngle {
			get {
				return ((double)(this.GetValue(SunAngleProperty)));
			}
			set {
				this.SetValue(SunAngleProperty, value);
			}
		}
	}
}
