<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" mc:Ignorable="d">

	<Style x:Key="Buttonstyle1" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
		<Setter Property="Template">
			<Setter.Value>
                <!--控件模板-->
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="MouseOver">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="fore">
								<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#34FFFFFF"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="MouseOver_Copy1">
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="fore">
								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="Transparent"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<!--背景色--><!--背景色--><!--背景色-->
					<Border x:Name="back" Opacity="0.8" CornerRadius="6" Background="#00000000">
						<Border.BitmapEffect>
							<OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding (Control.Background).(SolidColorBrush.Color), RelativeSource={RelativeSource TemplatedParent}}"/>
						</Border.BitmapEffect>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
                        <!--前景色及边框-->
						<Border x:Name="fore" BorderThickness="1" CornerRadius="6" BorderBrush="{x:Null}" Background="#00000000">
                            <!--按钮内容-->
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<ContentPresenter.Effect>
									<DropShadowEffect Opacity="0.6" Color="#FF454545"/>
								</ContentPresenter.Effect>
							</ContentPresenter>
						</Border>
					</Border>
                    <!--触发器-->
					<ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource MouseOver}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="MouseOver_Copy1_BeginStoryboard" Storyboard="{StaticResource MouseOver_Copy1}"/>
							</Trigger.ExitActions>
						</Trigger>
                        <!--按钮按下弹起-->
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="back" Value="#34FFFFFF"/>
						</Trigger>
                        <!--按钮失效-->
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="fore" Value="#33666666"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



    <!--定义按钮样式-->
	<Style x:Key="Buttonstyle2" TargetType="{x:Type Button}">
        <!--修改模板属性-->
		<Setter Property="Template">
			<Setter.Value>
                <!--控件模板-->
				<ControlTemplate TargetType="{x:Type Button}">
                    <!--只有Grid才能装下这么多Child-->
					<Grid>
                        <!--带特效的底层背景-->
						<Border x:Name="back" Opacity="0.8" CornerRadius="2">
							<Border.BitmapEffect>
								<OuterGlowBitmapEffect Opacity="0.8" GlowSize="0" GlowColor="Red"/>
							</Border.BitmapEffect>
							<Ellipse Width="49" Height="49">
								<Ellipse.Fill>
									<Brush>Red</Brush>
								</Ellipse.Fill>
							</Ellipse>
							<!--按钮呈圆形-->
						</Border>
						<Ellipse x:Name="outerCircle" Width="50" Height="50">
							<Ellipse.Fill>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0" Color="DarkOliveGreen"/>
									<GradientStop Offset="1" Color="Azure"/>
								</LinearGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
						<Ellipse Width="40" Height="40">
							<Ellipse.Fill>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Offset="0" Color="White"/>
									<GradientStop Offset="1" Color="Transparent"/>
								</LinearGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
                        <!--按钮内容-->
						<Border>
							<TextBlock x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}"/>
						</Border>
					</Grid>
                    <!--触发器-->
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation To="10" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
										<ColorAnimation To="#4FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="outerCircle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"/>
										<ColorAnimation To="#3FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="outerCircle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)"/>
										<ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="outerCircle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"/>
										<ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="outerCircle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX=".9" ScaleY=".9"/>
								</Setter.Value>
							</Setter>
							<Setter Property="RenderTransformOrigin" Value=".5,.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CheckRadioFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SliderCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="StoryboardIsChecked">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="StoryboardIsCheckedOff">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
								<EasingDoubleKeyFrame KeyTime="0" Value="14"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
						<BulletDecorator.Bullet>
							<Border x:Name="ForegroundPanel" BorderThickness="1" Width="35" Height="20" CornerRadius="10" Background="#FF9D9D9D">
								<Canvas>
									<Border Background="White" x:Name="CheckFlag" CornerRadius="10" VerticalAlignment="Center" BorderThickness="1" Width="19" Height="18" RenderTransformOrigin="0.5,0.5">
										<Border.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</Border.RenderTransform>
										<Border.Effect>
											<DropShadowEffect ShadowDepth="1" Direction="180" />
										</Border.Effect>
									</Border>
								</Canvas>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
								<RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
							</Trigger.EnterActions>
							<Setter Property="Background" TargetName="ForegroundPanel" Value="#FF0062FF"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
								<RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
							</Trigger.EnterActions>
							<Setter TargetName="ForegroundPanel" Property="Background" Value="#FFB1B1B1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MainTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Foreground">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
					<GradientStop Color="Black" Offset="1"/>
					<GradientStop Color="Black" Offset="0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	
	<Style x:Key="SudokuTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Style.Resources>
			<Storyboard x:Key="TbLoading" AutoReverse="True" RepeatBehavior="Forever">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:3" Value="1.15"/>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:3" Value="1.15"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</Style.Resources>
		<Style.Triggers>
			<EventTrigger RoutedEvent="FrameworkElement.Loaded">
				<BeginStoryboard Storyboard="{StaticResource TbLoading}"/>
			</EventTrigger>
		</Style.Triggers>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="FontSize" Value="32"/>
		<Setter Property="Foreground">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
					<LinearGradientBrush.RelativeTransform>
						<TransformGroup>
							<ScaleTransform CenterY="0.5" CenterX="0.5"/>
							<SkewTransform CenterY="0.5" CenterX="0.5"/>
							<RotateTransform Angle="-15" CenterY="0.5" CenterX="0.5"/>
							<TranslateTransform/>
						</TransformGroup>
					</LinearGradientBrush.RelativeTransform>
					<GradientStop Color="#FFBBF4FF" Offset="1"/>
					<GradientStop Color="#FFFFFABF" Offset="0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	<Style x:Key="GameoverTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Style.Resources>
			<Storyboard x:Key="tbLoad" AutoReverse="True" RepeatBehavior="Forever">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.2"/>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.2"/>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="0.595"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="{x:Null}">
					<EasingDoubleKeyFrame KeyTime="0" Value="-15"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-370"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</Style.Resources>
		<Style.Triggers>
			<Trigger Property="Visibility" Value="Visible">
				<Trigger.ExitActions>
					<StopStoryboard BeginStoryboardName="tbLoad_BeginStoryboard"/>
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="tbLoad_BeginStoryboard" Storyboard="{StaticResource tbLoad}"/>
				</Trigger.EnterActions>
			</Trigger>
		</Style.Triggers>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="FontSize" Value="48"/>
		<Setter Property="Foreground">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
					<LinearGradientBrush.RelativeTransform>
						<TransformGroup>
							<ScaleTransform CenterY="0.5" CenterX="0.5"/>
							<SkewTransform CenterY="0.5" CenterX="0.5"/>
							<RotateTransform Angle="-15" CenterY="0.5" CenterX="0.5"/>
							<TranslateTransform/>
						</TransformGroup>
					</LinearGradientBrush.RelativeTransform>
					<GradientStop Color="#FFFF4545" Offset="1"/>
					<GradientStop Color="#FFFFBD6D" Offset="0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Background">
			<Setter.Value>
				<RadialGradientBrush>
					<RadialGradientBrush.RelativeTransform>
						<TransformGroup>
							<ScaleTransform CenterY="0.5" CenterX="0.5"/>
							<SkewTransform CenterY="0.5" CenterX="0.5"/>
							<RotateTransform CenterY="0.5" CenterX="0.5"/>
							<TranslateTransform/>
						</TransformGroup>
					</RadialGradientBrush.RelativeTransform>
					<GradientStop Color="#97FF0000" Offset="0"/>
					<GradientStop Color="#00FF005D" Offset="1"/>
				</RadialGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="SodokuButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="#002BFF00"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="SodukuButtonLoad">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-360"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.4"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.4"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="BorderChange">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<Border x:Name="border" BorderBrush="#00000000" BorderThickness="2" Margin="0" CornerRadius="7" >

							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<LinearGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform CenterY="0.5" CenterX="0.5"/>
											<SkewTransform CenterY="0.5" CenterX="0.5"/>
											<RotateTransform Angle="-11" CenterY="0.5" CenterX="0.5"/>
											<TranslateTransform/>
										</TransformGroup>
									</LinearGradientBrush.RelativeTransform>
									<GradientStop Color="#40FFFFFF" Offset="0"/>
									<GradientStop Color="#40FFFFFF" Offset="1"/>
									<GradientStop Color="#3FC6C6C6" Offset="0.494"/>
									<GradientStop Color="#3FFFFFFF" Offset="0.819"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" RadiusX="7" RadiusY="7" StrokeThickness="4"/>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard x:Name="BorderChange_BeginStoryboard" Storyboard="{StaticResource BorderChange}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="FrameworkElement.Loaded">
							<BeginStoryboard Storyboard="{StaticResource SodukuButtonLoad}"/>
						</EventTrigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
							<Setter Property="Background" TargetName="border">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">


										<LinearGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterY="0.5" CenterX="0.5"/>
												<SkewTransform CenterY="0.5" CenterX="0.5"/>
												<RotateTransform Angle="-11" CenterY="0.5" CenterX="0.5"/>
												<TranslateTransform/>
											</TransformGroup>


										</LinearGradientBrush.RelativeTransform>
										<GradientStop Color="#CC5A3E3E" Offset="0"/>
										<GradientStop Color="#B1582E2E" Offset="1"/>
										<GradientStop Color="#80A15050" Offset="0.245"/>
										<GradientStop Color="#CB2B1717" Offset="0.767"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SudokuSelectButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#00000000"/>
		<Setter Property="BorderBrush" Value="#002BFF00"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0"/>
					<GradientStop Color="#FFFDFF00" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="SodukuButtonLoad">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-360"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.4"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.4"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="BorderChange">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="10"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-10"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="BorderChange_Copy1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<SplineDoubleKeyFrame KeyTime="0" Value="1.2"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<SplineDoubleKeyFrame KeyTime="0" Value="1.2"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
						<Grid.Effect>
							<DropShadowEffect/>
						</Grid.Effect>
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<Border x:Name="border" BorderBrush="#00000000" BorderThickness="2" Margin="0" CornerRadius="7" >

							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<LinearGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform CenterY="0.5" CenterX="0.5"/>
											<SkewTransform CenterY="0.5" CenterX="0.5"/>
											<RotateTransform Angle="-11" CenterY="0.5" CenterX="0.5"/>
											<TranslateTransform/>
										</TransformGroup>
									</LinearGradientBrush.RelativeTransform>
									<GradientStop Color="White" Offset="0"/>
									<GradientStop Color="#40FFFFFF" Offset="1"/>
									<GradientStop Color="#3FC6C6C6" Offset="0.494"/>
									<GradientStop Color="#88FFFFFF" Offset="0.819"/>
								</LinearGradientBrush>
							</Border.Background>
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" RadiusX="7" RadiusY="7" StrokeThickness="3"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard x:Name="BorderChange_BeginStoryboard" Storyboard="{StaticResource BorderChange}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard x:Name="BorderChange_Copy1_BeginStoryboard" Storyboard="{StaticResource BorderChange_Copy1}"/>
						</EventTrigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontSize" Value="34.667"/>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>
	
	
	<Style x:Key="SudokuTabButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="#00000000"/>
		<Setter Property="BorderBrush" Value="#002BFF00"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0"/>
					<GradientStop Color="#FF00FFD6" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="SodukuButtonLoad">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-360"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.4"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.4"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="BorderChange">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="10"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-10"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="BorderChange_Copy1">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<SplineDoubleKeyFrame KeyTime="0" Value="1.2"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<SplineDoubleKeyFrame KeyTime="0" Value="1.2"/>
								<SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
						<Grid.Effect>
							<DropShadowEffect/>
						</Grid.Effect>
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<Border x:Name="border" BorderBrush="#00000000" BorderThickness="2" Margin="0" CornerRadius="7" >

							<Border.Background>
								<ImageBrush ImageSource="Image/15_general.png"/>
							</Border.Background>
							<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" RadiusX="7" RadiusY="7" StrokeThickness="3"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard x:Name="BorderChange_BeginStoryboard" Storyboard="{StaticResource BorderChange}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<BeginStoryboard x:Name="BorderChange_Copy1_BeginStoryboard" Storyboard="{StaticResource BorderChange_Copy1}"/>
						</EventTrigger>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontSize" Value="29.333"/>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>
	
	<LinearGradientBrush x:Key="btnbackbrush" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" Opacity="1">
            <LinearGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform Angle="-19" CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                </TransformGroup>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="Transparent" Offset="0.526"/>
            <GradientStop Color="#FF8F1818" Offset="1"/>
            <GradientStop Color="#41DE2C2C" Offset="0.225"/>
            <GradientStop Color="#FF8F1818" Offset="0"/>
        </LinearGradientBrush>
	<Style x:Key="TetrisLabelStyle" TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Setter Property="Background" Value="#0088FF00"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Grid>
						<Grid.Effect>
							<DropShadowEffect ShadowDepth="0"/>
						</Grid.Effect>
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<Rectangle Margin="1">
						<Rectangle.Fill>
							<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
								<LinearGradientBrush.RelativeTransform>
									<TransformGroup>
										<ScaleTransform CenterY="0.5" CenterX="0.5"/>
										<SkewTransform CenterY="0.5" CenterX="0.5"/>
										<RotateTransform Angle="-10" CenterY="0.5" CenterX="0.5"/>
										<TranslateTransform/>
									</TransformGroup>
								</LinearGradientBrush.RelativeTransform>
								<GradientStop Offset="1"/>
								<GradientStop Color="#99FFFFFF"/>
							</LinearGradientBrush>
						</Rectangle.Fill></Rectangle>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="White"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
	</Style>

</ResourceDictionary>